#######################################################
# 
# Line.py
# Python implementation of the Class Line
# Generated by Enterprise Architect
# Created on:      15-Mar-2021 12:48:51 AM
# Original author: User
# 
#######################################################
from PyQt5.QtGui import QPen, QBrush

from utils import create_line, Point
from shapes.Shape import Shape


class Line(Shape):
    @staticmethod
    def name():
        return 'Line'

    def __init__(self, points, *, brd_color='black', bg_color='white', geometry=None):
        super(Line, self).__init__(points, brd_color=brd_color, bg_color=bg_color)
        self.geometry = geometry
        self.location = points[0]

    def draw(self, painter):
        painter.setPen(self.get_pen())
        p1, p2 = self.points[0], self.points[1]
        if p1.y() == p2.y() and p2.x() == p1.x():
            painter.drawPoint(p1.x(), p1.y())
        elif p2.x() == p1.x():
            painter.drawLine(Point(p1.x(), 0), p1.x(self.geometry.bottom()))
        else:
            line = create_line(p1, p2)
            painter.drawLine(Point(0, line(0)),
                             Point(self.geometry.right(),
                                   line(self.geometry.right())))
